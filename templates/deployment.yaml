---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "funkwhale.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "funkwhale.name" . }}
    helm.sh/chart: {{ include "funkwhale.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    audio.funkwhale/component: app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "funkwhale.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      audio.funkwhale/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "funkwhale.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        audio.funkwhale/component: app
    spec:
      containers:
        - name: funkwhale
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - |-
              set -x

              # Copy frontend files for the front pod
              cp -r frontend/* /srv/funkwhale/frontend/

              # Apply any waiting migrations
              /app/manage.py migrate

              # Make the server bind to a unix socket
              if [ -e compose/django/daphne.sh ]; then
                sed -e 's!-b 0.0.0.0 -p 5000!-u /run/funkwhale/funkwhale.sock!' -i compose/django/daphne.sh
                compose/django/entrypoint.sh compose/django/daphne.sh
              else
                sed -e 's!0.0.0.0:5000!unix:/run/funkwhale/funkwhale.sock!' -i compose/django/server.sh
                compose/django/entrypoint.sh compose/django/server.sh
              fi
          readinessProbe:
            exec:
              command:
                - stat
                - /run/funkwhale/funkwhale.sock
          envFrom:
          - configMapRef:
              name: {{ include "funkwhale.fullname" . }}
          - secretRef:
              name: {{ include "funkwhale.fullname" . }}
          volumeMounts:
            - mountPath: /run/funkwhale
              name: funkwhale-sock
            - mountPath: /srv/funkwhale/data/static/
              name: static
            - mountPath: /srv/funkwhale/frontend
              name: frontend
            - name: data
              mountPath: /srv/funkwhale/data
{{- with .Values.extraVolumeMounts }}
            {{ toYaml . | nindent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
        - name: nginx
          image: "{{ .Values.front.image.repository }}:{{ .Values.front.image.tag }}"
          imagePullPolicy: {{ .Values.front.image.pullPolicy }}
          command:
            - sh
            - -c
            - |-
              # Instantiate the nginx template
              envsubst "`env | awk -F = '{printf \" $%s\", $1}'`" < /etc/nginx/funkwhale.template > /etc/nginx/conf.d/default.conf

              # Add a hardcoded resolver configuration to ease S3 usage
              echo "resolver $(grep nameserver /etc/resolv.conf | head -n1 | awk '{print $2}');" > /etc/nginx/conf.d/resolver.conf

              # Launch nginx
              nginx -g 'daemon off;'
          envFrom:
          - configMapRef:
              name: {{ include "funkwhale.fullname" . }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - mountPath: /run/funkwhale
              name: funkwhale-sock
            - mountPath: /srv/funkwhale/data
              name: data
            - mountPath: /frontend
              name: frontend
              readOnly: true
            - mountPath: /etc/nginx/funkwhale_proxy.conf
              name: config
              subPath: proxy.conf
              readOnly: true
            - mountPath: /etc/nginx/funkwhale.template
              name: config
              subPath: nginx.conf
              readOnly: true
{{- if .Values.front.extraVolumeMounts }}
{{ toYaml .Values.front.extraVolumeMounts | indent 12 }}
{{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: funkwhale-sock
          emptyDir: {}
        - name: frontend
          emptyDir: {}
        - name: static
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "funkwhale.fullname" . }}-front
        - name: data
    {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "funkwhale.fullname" .) }}
    {{- else }}
          emptyDir: {}
    {{- end }}
{{- if .Values.api.extraVolumes }}
{{ toYaml .Values.api.extraVolumes | indent 8 }}
{{- end }}
